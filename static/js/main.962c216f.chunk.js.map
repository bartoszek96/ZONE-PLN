{"version":3,"sources":["theme/Theme.js","theme/GlobalStyle.js","components/Navigation/Navigation.styles.js","components/Navigation/Navigation.js","pages/Home/Home.styles.js","components/CurrencyLink/CurrencyLink.styles.js","components/CurrencyLink/CurrencyLink.js","pages/Home/Home.js","pages/Currency/Currency.styles.js","components/Chart/Chart.styles.js","components/Chart/Chart.js","components/CurrencyDescription/CurrencyDescription.styles.js","components/CurrencyConverter/CurrencyConverter.styles.js","components/CurrencyConverter/CurrencyConverter.js","components/CurrencyDetails/CurrencyDetails.styles.js","components/CurrencyDetails/CurrencyDetails.js","components/CurrencyDescription/CurrencyDescription.js","pages/Currency/Currency.js","pages/ErrorPage/ErrorPage.styles.js","pages/ErrorPage/ErrorPage.js","routes/Routes.js","App.js","index.js"],"names":["themes","light","color","backgroundColor","secondaryColor","secondaryBackgroundColor","borderColor","chartBackgroundColor","dark","breakpoints","ThemeContext","React","createContext","GlobalStyle","createGlobalStyle","normalize","StyledNav","styled","nav","theme","StyledSpan","span","StyledSwitch","withStyles","switchBase","checked","track","Switch","Navigation","themeSwitchChecked","themeSwitchOnChange","useContext","sunIcon","icon","faSun","moonIcon","faMoon","to","FormControlLabel","control","onChange","label","StyledHome","main","StyledHeader","header","StyledDiv","div","StyledLink","Link","CurrencyLink","currency","currencyCode","midPrice","delay","initial","x","animate","transition","type","toFixed","Home","data","loading","errorText","map","index","code","mid","key","StyledCurrency","Wrapper","section","StyledChart","Chart","dataSet","options","scales","xAxes","ticks","fontColor","yAxes","legend","labels","chartData","effectiveDate","datasets","pointBackgroundColor","pointBorderColor","StyledCurrencyDescription","StyledText","StyledCurrencyConverter","StyledCodes","StyledForm","form","StyledButton","button","StyledResult","CurrencyConverter","currencyInfo","useState","switchChecked","setSwitchChecked","inputValue","setInputValue","result","setResult","arrowIcon","faArrowRight","onSubmit","event","preventDefault","e","Number","target","value","step","min","placeholder","StyledCurrencyDetails","CurrencyDetails","array","valuesArray","lowestValue","Math","highestValue","max","averageValue","reduce","p","c","length","CurrencyTools","opacity","duration","toUpperCase","Currency","setLoading","setDataSet","setErrorText","useEffect","isMounted","axios","get","then","response","status","Error","statusText","rates","catch","error","CurrencyDescription","StyledErrorPage","ErrorPage","Routes","setData","fetchCurrenciesData","path","exact","component","App","setTheme","setThemeSwitchChecked","Theme","Provider","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.962c216f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const themes = {\r\n  light: {\r\n    color: '#36454f',\r\n    backgroundColor: '#eaeaea',\r\n    secondaryColor: '#36454f',\r\n    secondaryBackgroundColor: 'white',\r\n    borderColor: '#ffd700',\r\n    chartBackgroundColor: 'rgba(128, 128, 128, 0.5)'\r\n  },\r\n  dark: {\r\n    color: 'white',\r\n    backgroundColor: '#a0a0a0',\r\n    secondaryColor: 'white',\r\n    secondaryBackgroundColor: '#36454f',\r\n    borderColor: '#ffd700',\r\n    chartBackgroundColor: 'rgba(60, 60, 94, 0.493)'\r\n  }\r\n}\r\n\r\nexport const breakpoints = {\r\n  extraSmall: '400px',\r\n  small: '576px',\r\n  medium: '768px'\r\n}\r\n\r\nconst ThemeContext = React.createContext(themes.light);\r\n\r\nexport default ThemeContext;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { normalize } from 'styled-normalize';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n  \r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  body {\r\n    overflow-x: hidden;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../theme/Theme';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport const StyledNav = styled.nav`\r\n  color: ${({ theme }) => theme.secondaryColor};\r\n  background: ${({ theme }) => theme.secondaryBackgroundColor};\r\n  position: sticky;\r\n  z-index: 1000;\r\n  top: 0;\r\n  height: 15vh;\r\n  width: 100vw;\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n  transition: color .5s, background .5s;\r\n  border-bottom: 3px solid ${({ theme }) => theme.borderColor};\r\n\r\n  & a {\r\n    color: ${({ theme }) => theme.secondaryColor};\r\n    text-decoration: none;\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.small}) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const StyledSpan = styled.span`\r\n  color: ${({ theme }) => theme.borderColor};\r\n`;\r\n\r\nexport const StyledSwitch = withStyles({\r\n  switchBase: {\r\n    color: '#36454f',\r\n    '&$checked': {\r\n      color: 'white',\r\n    },\r\n    '&$checked + $track': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n","import React, { useContext } from 'react';\r\nimport { StyledNav, StyledSwitch, StyledSpan } from './Navigation.styles';\r\nimport ThemeContext, { themes } from '../../theme/Theme';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Navigation = ({ themeSwitchChecked, themeSwitchOnChange }) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const sunIcon = <FontAwesomeIcon icon={faSun} />\r\n  const moonIcon = <FontAwesomeIcon icon={faMoon} />\r\n\r\n  return (\r\n    <StyledNav theme={theme}>\r\n      <Link to='/'><StyledSpan theme={theme}>Z</StyledSpan>ONE P<StyledSpan theme={theme}>L</StyledSpan>N</Link>\r\n      <FormControlLabel\r\n        control={<StyledSwitch checked={themeSwitchChecked} onChange={themeSwitchOnChange} />}\r\n        label={theme === themes.light ? sunIcon : moonIcon}\r\n      />\r\n    </StyledNav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../theme/Theme';\r\n\r\nexport const StyledHome = styled.main`\r\n  background: ${({ theme }) => theme.backgroundColor};\r\n  color: ${({ theme }) => theme.color};\r\n  transition: color .3s, background .3s;\r\n  min-height: 85vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledHeader = styled.header`\r\n  color: ${({ theme }) => theme.color};\r\n  margin: 10px;\r\n  font-weight: 700;\r\n  font-size: 2rem;\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const StyledDiv = styled.div`\r\n  text-align: justify;\r\n  padding: 20px;\r\n  font-size: 2rem;\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    text-align: center;\r\n    padding: 10px;\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { breakpoints } from '../../theme/Theme';\r\n\r\nexport const StyledLink = styled(Link)`\r\n  color: ${({ theme }) => theme.secondaryColor};\r\n  background: ${({ theme }) => theme.secondaryBackgroundColor};\r\n  font-size: 1.5rem;\r\n  padding: 10px;\r\n  margin: 5px;\r\n  width: 80vw;\r\n  text-decoration: none;\r\n  font-weight: 700;\r\n  border: solid 3px ${({ theme }) => theme.borderColor};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  transition: transform .5s;\r\n  border-radius: 10px;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    font-size: 1.2rem;\r\n    width: 90vw;\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.small}) {\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.extraSmall}) {\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { StyledLink } from './CurrencyLink.styles';\r\nimport ThemeContext from '../../theme/Theme';\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst CurrencyLink = ({ currency, currencyCode, midPrice, delay }) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ x: -1500 }}\r\n      animate={{ x: 0 }}\r\n      transition={{\r\n        type: 'tween',\r\n        delay: delay\r\n      }}\r\n    >\r\n      <StyledLink to={`/${currencyCode}`} theme={theme}>\r\n        <div>{currencyCode} - {currency}</div>\r\n        <div>{midPrice.toFixed(4)} PLN</div>\r\n      </StyledLink>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default CurrencyLink;\r\n","import React, { useContext } from 'react';\r\nimport { StyledHome, StyledHeader, StyledDiv } from './Home.styles';\r\nimport ReactLoading from \"react-loading\";\r\nimport ThemeContext from '../../theme/Theme';\r\nimport CurrencyLink from '../../components/CurrencyLink/CurrencyLink';\r\n\r\nconst Home = ({ data, loading, errorText }) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <StyledHome theme={theme}>\r\n      <StyledDiv>\r\n        Aplikacja umożliwia przeliczenie kursów 35 różnych walut względem złotego oraz przedstawia kurs tych walut w postaci wykresu na podstawie ostatnich 90 notowań NBP. Aby uzyskać szczegóły wybierz walutę, która Cię interesuje.\r\n      </StyledDiv>\r\n      <StyledHeader>Wybierz walutę:</StyledHeader>\r\n      {errorText !== '' ?\r\n        <div>{errorText}</div> :\r\n        null\r\n      }\r\n      {loading ?\r\n        <ReactLoading type='spin' color={theme.color} /> :\r\n        data.map(({ code, currency, mid }, index) => (\r\n          <CurrencyLink key={code} currency={currency} currencyCode={code} midPrice={mid} delay={index / 20} />\r\n        ))\r\n      }\r\n    </StyledHome>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../theme/Theme';\r\n\r\nexport const StyledCurrency = styled.main`\r\n  background: ${({ theme }) => theme.backgroundColor};\r\n  color: ${({ theme }) => theme.color};\r\n  transition: color .3s, background .3s;\r\n  min-height: 85vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    flex-direction: column-reverse;\r\n    justify-content: start;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100vw;\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    flex-direction: column-reverse;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../theme/Theme';\r\n\r\nexport const StyledChart = styled.section`\r\n  width: 60vw;\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    width: 95vw;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport ThemeContext from '../../theme/Theme';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { StyledChart } from './Chart.styles';\r\n\r\nconst Chart = ({ dataSet }) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [{\r\n        ticks: {\r\n          fontColor: theme.secondaryColor\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        ticks: {\r\n          fontColor: theme.secondaryColor\r\n        }\r\n      }]\r\n    },\r\n\r\n    legend: {\r\n      labels: {\r\n        fontColor: theme.secondaryColor,\r\n      }\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: dataSet.map(data => data.effectiveDate),\r\n    datasets: [\r\n      {\r\n        label: 'Kurs',\r\n        data: dataSet.map(data => data.mid.toFixed(4)),\r\n        borderColor: theme.borderColor,\r\n        backgroundColor: theme.chartBackgroundColor,\r\n        pointBackgroundColor: theme.secondaryColor,\r\n        pointBorderColor: 'black'\r\n      }\r\n    ]\r\n  }\r\n\r\n  return (\r\n    <StyledChart theme={theme}>\r\n      <Line data={chartData} options={options} />\r\n    </StyledChart>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../theme/Theme';\r\n\r\nexport const StyledCurrencyDescription = styled.section`\r\n  width: 35vw;\r\n  text-align: center;\r\n  margin: 20px 0;\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    width: 90vw;\r\n  }\r\n`;\r\n\r\nexport const StyledText = styled.section`\r\n  font-weight: 700;\r\n  font-size: 1.5rem;\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.small}) {\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.extraSmall}) {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../theme/Theme';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport const StyledCurrencyConverter = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const StyledCodes = styled.section`\r\n  font-weight: 700;\r\n  font-size: 2rem;\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  & input {\r\n    width: 30vw;\r\n    font-size: 1.5rem;\r\n    border: 3px solid ${({ theme }) => theme.borderColor};\r\n    padding: 2px;\r\n    border-radius: 10px;\r\n    margin: 3px 0;\r\n    color: ${({ theme }) => theme.secondaryColor};\r\n    background: ${({ theme }) => theme.secondaryBackgroundColor};\r\n    font-weight: 700;\r\n    text-align: center;\r\n\r\n    @media (max-width: ${breakpoints.medium}) {\r\n      width: 80vw;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  width: 15vw;\r\n  cursor: pointer;\r\n  font-size: 1.3rem;\r\n  border: 3px solid ${({ theme }) => theme.borderColor};\r\n  border-radius: 10px;\r\n  margin: 3px 0;\r\n  padding: 2px;\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.secondaryColor};\r\n  background: ${({ theme }) => theme.secondaryBackgroundColor};\r\n  transition: transform .5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    width: 50vw;\r\n  }\r\n`;\r\n\r\nexport const StyledResult = styled.section`\r\n  font-size: 1.2rem;\r\n  margin: 10px 0;\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.small}) {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.extraSmall}) {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const StyledSwitch = withStyles({\r\n  switchBase: {\r\n    color: '#ffd700',\r\n    '&$checked': {\r\n      color: '#ffd700',\r\n    },\r\n    '&$checked + $track': {\r\n      backgroundColor: '#36454f',\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n","import React, { useState, useContext } from 'react';\r\nimport {\r\n  StyledCurrencyConverter,\r\n  StyledSwitch,\r\n  StyledCodes,\r\n  StyledResult,\r\n  StyledForm,\r\n  StyledButton\r\n} from './CurrencyConverter.styles';\r\nimport { Link } from 'react-router-dom';\r\nimport ThemeContext from '../../theme/Theme';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst CurrencyConverter = ({ currencyInfo }) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const [switchChecked, setSwitchChecked] = useState(false);\r\n  const [inputValue, setInputValue] = useState(0);\r\n  const [result, setResult] = useState('Wpisz dane');\r\n\r\n  const arrowIcon = <FontAwesomeIcon icon={faArrowRight} />\r\n\r\n  const handleSwitchClick = () => {\r\n    setSwitchChecked(!switchChecked);\r\n  }\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n    if (inputValue >= 0) {\r\n      if (switchChecked) {\r\n        setResult(`${inputValue.toFixed(4)} PLN = ${(inputValue.toFixed(4) / currencyInfo.mid).toFixed(4)} ${currencyInfo.code}`);\r\n      } else {\r\n        setResult(`${inputValue.toFixed(4)} ${currencyInfo.code} = ${(inputValue.toFixed(4) * currencyInfo.mid).toFixed(4)} PLN`);\r\n      }\r\n    } else {\r\n      setResult('Wartość musi być dodatnia.');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledCurrencyConverter>\r\n      {switchChecked ?\r\n        <StyledCodes>PLN {arrowIcon} {currencyInfo.code}</StyledCodes> :\r\n        <StyledCodes>{currencyInfo.code} {arrowIcon} PLN</StyledCodes>\r\n      }\r\n      <StyledSwitch checked={switchChecked} onChange={handleSwitchClick} />\r\n      <StyledForm onSubmit={submitHandler} theme={theme}>\r\n        <input\r\n          onChange={e => setInputValue(Number(e.target.value))}\r\n          type='number'\r\n          step='0.0001'\r\n          min='0'\r\n          placeholder={`Wpisz ilość ${switchChecked ? 'PLN' : currencyInfo.code}`}\r\n        />\r\n        <StyledButton theme={theme}>OBLICZ</StyledButton>\r\n      </StyledForm>\r\n      <Link to='/'>\r\n        <StyledButton theme={theme}>POWRÓT</StyledButton>\r\n      </Link>\r\n      <StyledResult>{result}</StyledResult>\r\n    </StyledCurrencyConverter>\r\n  );\r\n}\r\n\r\nexport default CurrencyConverter;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCurrencyDetails = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1.2rem;\r\n`;\r\n","import React from 'react';\r\nimport { StyledCurrencyDetails } from './CurrencyDetails.styles';\r\n\r\nconst CurrencyDetails = ({ dataSet }) => {\r\n\r\n  const getAverageValue = array => array.reduce((p, c) => p + c, 0) / array.length;\r\n  const valuesArray = dataSet.map(data => data.mid);\r\n  const lowestValue = Math.min(...valuesArray).toFixed(4);\r\n  const highestValue = Math.max(...valuesArray).toFixed(4);\r\n  const averageValue = getAverageValue(valuesArray).toFixed(4);\r\n\r\n  return (\r\n    <StyledCurrencyDetails>\r\n      <div>Najniższy kurs: {lowestValue}</div>\r\n      <div>Najwyższy kurs: {highestValue}</div>\r\n      <div>Średni kurs: {averageValue}</div>\r\n      <div>(Ostatnie 90 notowań)</div>\r\n    </StyledCurrencyDetails>\r\n  );\r\n}\r\n\r\nexport default CurrencyDetails;\r\n","import React from 'react';\r\nimport { StyledCurrencyDescription, StyledText } from './CurrencyDescription.styles';\r\nimport CurrencyConverter from '../CurrencyConverter/CurrencyConverter';\r\nimport CurrencyDetails from '../CurrencyDetails/CurrencyDetails';\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst CurrencyTools = ({ dataSet, currencyInfo }) => {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{\r\n        type: 'tween',\r\n        duration: '2'\r\n      }}\r\n    >\r\n      <StyledCurrencyDescription>\r\n        <StyledText>{currencyInfo.code} - {currencyInfo.currency.toUpperCase()}</StyledText>\r\n        <StyledText> KURS: {currencyInfo.mid.toFixed(4)} PLN</StyledText>\r\n        <CurrencyDetails dataSet={dataSet} />\r\n        <CurrencyConverter currencyInfo={currencyInfo} />\r\n      </StyledCurrencyDescription>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default CurrencyTools;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { StyledCurrency, Wrapper } from './Currency.styles'\r\nimport ReactLoading from \"react-loading\";\r\nimport ThemeContext from '../../theme/Theme';\r\nimport axios from 'axios';\r\nimport Chart from '../../components/Chart/Chart';\r\nimport CurrencyDescription from '../../components/CurrencyDescription/CurrencyDescription';\r\n\r\nconst Currency = ({ currencyInfo }) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataSet, setDataSet] = useState([]);\r\n  const [errorText, setErrorText] = useState('');\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const fetchCurrencyDataSet = () => {\r\n      axios.get(`https://api.nbp.pl/api/exchangerates/rates/A/${currencyInfo.code}/last/90?format=json`)\r\n        .then(response => {\r\n          if (response.status !== 200) {\r\n            throw Error(response.statusText);\r\n          }\r\n          if (isMounted) {\r\n            setErrorText('');\r\n            setLoading(false);\r\n            setDataSet(response.data.rates);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          if (isMounted) {\r\n            setLoading(false);\r\n            setErrorText(`${error}`);\r\n          }\r\n        });\r\n    }\r\n\r\n    if (isMounted) {\r\n      setLoading(true);\r\n      fetchCurrencyDataSet();\r\n    }\r\n\r\n    return () => { isMounted = false };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <StyledCurrency theme={theme}>\r\n      {errorText !== '' ?\r\n        <div>{errorText}</div> :\r\n        null\r\n      }\r\n      {loading ?\r\n        <ReactLoading type='spin' color={theme.color} /> :\r\n        <Wrapper>\r\n          <Chart dataSet={dataSet} />\r\n          <CurrencyDescription dataSet={dataSet} currencyInfo={currencyInfo}/>\r\n        </Wrapper>\r\n      }\r\n    </StyledCurrency>\r\n  );\r\n}\r\n\r\nexport default Currency;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../theme/Theme';\r\n\r\nexport const StyledErrorPage = styled.main`\r\n  color: ${({ theme }) => theme.secondaryColor};\r\n  background: ${({ theme }) => theme.secondaryBackgroundColor};\r\n  text-align: center;\r\n  min-height: 85vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: 700;\r\n  font-size: 2rem;\r\n\r\n  @media (max-width: ${breakpoints.medium}) {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.small}) {\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  @media (max-width: ${breakpoints.extraSmall}) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { StyledErrorPage } from './ErrorPage.styles';\r\nimport ThemeContext from '../../theme/Theme';\r\n\r\nconst ErrorPage = () => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <StyledErrorPage theme={theme}>Nie ma takiej strony :(</StyledErrorPage>\r\n  );\r\n}\r\n \r\nexport default ErrorPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from '../pages/Home/Home';\r\nimport Currency from '../pages/Currency/Currency';\r\nimport ErrorPage from '../pages/ErrorPage/ErrorPage';\r\nimport axios from 'axios';\r\n\r\nconst Routes = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [errorText, setErrorText] = useState('');\r\n  const url = 'https://api.nbp.pl/api/exchangerates/tables/A?format=json';\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchCurrenciesData();\r\n  }, []);\r\n\r\n  const fetchCurrenciesData = () => {\r\n    axios.get(url)\r\n      .then(response => {\r\n        if (response.status !== 200) {\r\n          throw Error(response.statusText);\r\n        }\r\n        setErrorText('');\r\n        setData(response.data[0].rates);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        setErrorText(`${error}`);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n      <Switch>\r\n        <Route path='/' exact component={() => <Home data={data} loading={loading} errorText={errorText} />} />\r\n        {data.map(currency =>\r\n          (<Route\r\n            key={currency.code}\r\n            path={`/${currency.code}`}\r\n            component={() => <Currency currencyInfo={currency} />}\r\n          />))}\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React, { useState } from 'react';\nimport ThemeContext, { themes } from './theme/Theme';\nimport { HashRouter } from 'react-router-dom';\nimport GlobalStyle from './theme/GlobalStyle';\nimport Navigation from './components/Navigation/Navigation';\nimport Routes from './routes/Routes';\n\nfunction App() {\n\n  const [theme, setTheme] = useState(themes.light);\n  const [themeSwitchChecked, setThemeSwitchChecked] = useState(false);\n\n  const themeChangeHandler = () => {\n    setTheme(theme === themes.light ? themes.dark : themes.light);\n    setThemeSwitchChecked(!themeSwitchChecked);\n  }\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <GlobalStyle />\n      <HashRouter basename='/'>\n        <Navigation themeSwitchChecked={themeSwitchChecked} themeSwitchOnChange={themeChangeHandler} />\n        <Routes />\n      </HashRouter>\n    </ThemeContext.Provider>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}